{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\reduxcp\\\\src\\\\TodoCard.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from \"react-redux\";\nimport { completeTask, deleteTask, editTheTask, editTheTaskOk } from './component/Action';\nimport React, { useState } from 'react';\n\nconst TodoCard = ({\n  el\n}) => {\n  _s();\n\n  const [editedText, setEditedText] = useState(el.text);\n  const dispatch = useDispatch();\n\n  const handleComplete = () => {\n    dispatch(completeTask(el.id));\n  };\n\n  const handleDelete = () => {\n    dispatch(deleteTask(el.id));\n  };\n\n  const handleEditOk = () => {\n    dispatch(editTheTaskOk({\n      id: el.id,\n      text: editedText\n    }));\n  };\n\n  const handleEdit = () => {\n    dispatch(editTheTask(el.id));\n    setEditedText(el.text);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: el.tabdil ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: editedText,\n        onChange: e => setEditedText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-outline-success\",\n        onClick: handleEditOk,\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-outline-secondary\",\n        onClick: handleEdit,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: el.isDone ? {\n          textDecoration: 'line-through'\n        } : {\n          textDecoration: 'none'\n        },\n        children: el.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-outline-secondary\",\n        onClick: handleComplete,\n        children: \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-outline-warning\",\n        onClick: handleEdit,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-outline-danger\",\n        onClick: handleDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n\n_s(TodoCard, \"aVsxXT8ARM02ElSDPlSg6klo37g=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TodoCard;\nexport default TodoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoCard\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/reduxcp/src/TodoCard.js"],"names":["useDispatch","completeTask","deleteTask","editTheTask","editTheTaskOk","React","useState","TodoCard","el","editedText","setEditedText","text","dispatch","handleComplete","id","handleDelete","handleEditOk","handleEdit","tabdil","e","target","value","isDone","textDecoration"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAAQC,YAAR,EAAsBC,UAAtB,EAAkCC,WAAlC,EAA+CC,aAA/C,QAAmE,oBAAnE;AACA,OAAOC,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;AAGA,MAAMC,QAAQ,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAS;AAAA;;AACpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAACE,EAAE,CAACG,IAAJ,CAA5C;AAED,QAAMC,QAAQ,GAACZ,WAAW,EAA1B;;AACA,QAAOa,cAAc,GAAE,MAAI;AACvBD,IAAAA,QAAQ,CAACX,YAAY,CAACO,EAAE,CAACM,EAAJ,CAAb,CAAR;AACH,GAFD;;AAGA,QAAMC,YAAY,GAAC,MAAI;AACnBH,IAAAA,QAAQ,CAACV,UAAU,CAACM,EAAE,CAACM,EAAJ,CAAX,CAAR;AACH,GAFD;;AAGA,QAAME,YAAY,GAAC,MAAI;AACtBJ,IAAAA,QAAQ,CAACR,aAAa,CAAC;AAACU,MAAAA,EAAE,EAACN,EAAE,CAACM,EAAP;AAAUH,MAAAA,IAAI,EAACF;AAAf,KAAD,CAAd,CAAR;AACA,GAFD;;AAGA,QAAMQ,UAAU,GAAC,MAAI;AACjBL,IAAAA,QAAQ,CAACT,WAAW,CAACK,EAAE,CAACM,EAAJ,CAAZ,CAAR;AACAJ,IAAAA,aAAa,CAACF,EAAE,CAACG,IAAJ,CAAb;AACH,GAHD;;AAIE,sBACI;AAAA,cACKH,EAAE,CAACU,MAAJ,gBACD;AAAA,8BACA;AAAO,QAAA,KAAK,EAAET,UAAd;AAA0B,QAAA,QAAQ,EAAGU,CAAD,IAAKT,aAAa,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV;AAAtD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,KAAK,EAAC,yBAAd;AAAwC,QAAA,OAAO,EAAEL,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAQ,QAAA,KAAK,EAAC,2BAAd;AAA0C,QAAA,OAAO,EAAEC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA,oBADC,gBAOD;AAAA,8BACA;AAAI,QAAA,KAAK,EAAGT,EAAE,CAACc,MAAJ,GAAY;AAACC,UAAAA,cAAc,EAAC;AAAhB,SAAZ,GAA4C;AAACA,UAAAA,cAAc,EAAC;AAAhB,SAAvD;AAAA,kBAAiFf,EAAE,CAACG;AAApF;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,KAAK,EAAC,2BAAd;AAA0C,QAAA,OAAO,EAAEE,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAQ,QAAA,KAAK,EAAC,yBAAd;AAAwC,QAAA,OAAO,EAAEI,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA;AAAQ,QAAA,KAAK,EAAC,wBAAd;AAAuC,QAAA,OAAO,EAAEF,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AARH;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBJ,CArCD;;GAAMR,Q;UAGYP,W;;;KAHZO,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import { useDispatch } from \"react-redux\"\r\nimport {completeTask, deleteTask, editTheTask, editTheTaskOk} from './component/Action'\r\nimport React,{useState} from 'react'\r\n\r\n\r\nconst TodoCard=({el}) =>{\r\n    const [editedText, setEditedText] = useState(el.text)\r\n\r\n   const dispatch=useDispatch()\r\n   const  handleComplete =()=>{\r\n       dispatch(completeTask(el.id))\r\n   }\r\n   const handleDelete=()=>{\r\n       dispatch(deleteTask(el.id))\r\n   }\r\n   const handleEditOk=()=>{\r\n    dispatch(editTheTaskOk({id:el.id,text:editedText}))\r\n   }\r\n   const handleEdit=()=>{\r\n       dispatch(editTheTask(el.id))\r\n       setEditedText(el.text)\r\n   }\r\n     return(\r\n         <div>\r\n            {(el.tabdil) ? (\r\n            <>\r\n            <input value={editedText} onChange={(e)=>setEditedText(e.target.value)}/> \r\n            <button class=\"btn btn-outline-success\" onClick={handleEditOk}>OK</button>\r\n            <button class=\"btn btn-outline-secondary\" onClick={handleEdit}>Cancel</button>\r\n            </>\r\n            ) :(\r\n            <>\r\n            <h3 style={(el.isDone)?{textDecoration:'line-through'}:{textDecoration:'none'}}>{el.text}</h3>\r\n            <button class=\"btn btn-outline-secondary\" onClick={handleComplete}>Complete</button>\r\n            <button class=\"btn btn-outline-warning\" onClick={handleEdit}>Edit</button>\r\n            <button class=\"btn btn-outline-danger\" onClick={handleDelete}>Delete</button>\r\n            </>\r\n            )\r\n            }\r\n            </div>\r\n    \r\n    )\r\n}\r\nexport default TodoCard"]},"metadata":{},"sourceType":"module"}