{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Check-Point-Redux-main\\\\src\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterTask } from './component/Action';\nimport TodoCard from \"./TodoCard\";\n\nconst TodoList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const task = useSelector(state => state);\n\n  const handleAll = () => {\n    dispatch(filterTask(\"ALL\"));\n  };\n\n  const handleDone = () => {\n    dispatch(filterTask(\"DONE\"));\n  };\n\n  const handleNotDone = () => {\n    dispatch(filterTask(\"NOTDONE\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-primary\",\n          onClick: handleAll,\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-primary\",\n          onClick: handleDone,\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-primary\",\n          onClick: handleNotDone,\n          children: \"Not Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }, this), task.y === \"ALL\" ? task.tasks.map((el, i) => /*#__PURE__*/_jsxDEV(TodoCard, {\n      el: el\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 28\n    }, this)) : task.y === \"DONE\" ? task.tasks.filter(el => el.isDone).map((el, i) => /*#__PURE__*/_jsxDEV(TodoCard, {\n      el: el\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 68\n    }, this)) :\n    /*task.y===\"NOTDONE\"*/\n    task.tasks.filter(el => !el.isDone).map((el, i) => /*#__PURE__*/_jsxDEV(TodoCard, {\n      el: el\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 166\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 8\n  }, this);\n};\n\n_s(TodoList, \"mSCjz+FMn4Cgb8L+qf6QfUwnBzo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/Check-Point-Redux-main/src/TodoList.js"],"names":["React","useState","useSelector","useDispatch","filterTask","TodoCard","TodoList","dispatch","task","state","handleAll","handleDone","handleNotDone","y","tasks","map","el","i","filter","isDone"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAIA,MAAMC,QAAQ,GAAC,MAAI;AAAA;;AACf,QAAMC,QAAQ,GAACJ,WAAW,EAA1B;AAEA,QAAMK,IAAI,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAV,CAAxB;;AACC,QAAMC,SAAS,GAAC,MAAI;AACnBH,IAAAA,QAAQ,CAACH,UAAU,CAAC,KAAD,CAAX,CAAR;AACA,GAFD;;AAGA,QAAMO,UAAU,GAAC,MAAI;AAClBJ,IAAAA,QAAQ,CAACH,UAAU,CAAC,MAAD,CAAX,CAAR;AACA,GAFH;;AAGE,QAAMQ,aAAa,GAAC,MAAI;AACvBL,IAAAA,QAAQ,CAACH,UAAU,CAAC,SAAD,CAAX,CAAR;AACA,GAFD;;AAGJ,sBAEI;AAAA,4BACE;AAAA,8BAAK;AAAA;AAAA;AAAA;AAAA,cAAL,eACJ;AAAA,qCAAG;AAAS,UAAA,KAAK,EAAC,iBAAf;AAAiC,UAAA,OAAO,EAAEM,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,eACG;AAAU,UAAA,KAAK,EAAC,iBAAhB;AAAkC,UAAA,OAAO,EAAEC,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAU,UAAA,KAAK,EAAC,iBAAhB;AAAkC,UAAA,OAAO,EAAEC,aAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA,sBADI;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAUDJ,IAAI,CAACK,CAAL,KAAS,KAAT,GACFL,IAAI,CAACM,KAAL,CAAWC,GAAX,CAAe,CAACC,EAAD,EAAIC,CAAJ,kBAAQ,QAAC,QAAD;AAAkB,MAAA,EAAE,EAAED;AAAtB,OAAeC,CAAf;AAAA;AAAA;AAAA;AAAA,YAAvB,CADE,GAEFT,IAAI,CAACK,CAAL,KAAS,MAAT,GAAkBL,IAAI,CAACM,KAAL,CAAWI,MAAX,CAAkBF,EAAE,IAAEA,EAAE,CAACG,MAAzB,EAAiCJ,GAAjC,CAAqC,CAACC,EAAD,EAAIC,CAAJ,kBAAQ,QAAC,QAAD;AAAkB,MAAA,EAAE,EAAED;AAAtB,OAAeC,CAAf;AAAA;AAAA;AAAA;AAAA,YAA7C,CAAlB;AAA4F;AAAuBT,IAAAA,IAAI,CAACM,KAAL,CAAWI,MAAX,CAAkBF,EAAE,IAAE,CAACA,EAAE,CAACG,MAA1B,EAAkCJ,GAAlC,CAAsC,CAACC,EAAD,EAAIC,CAAJ,kBAAQ,QAAC,QAAD;AAAkB,MAAA,EAAE,EAAED;AAAtB,OAAeC,CAAf;AAAA;AAAA;AAAA;AAAA,YAA9C,CAZhH;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAmBF,CAhCD;;GAAMX,Q;UACaH,W,EAEFD,W;;;KAHXI,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import React,{useState} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { filterTask } from './component/Action'\r\nimport TodoCard from \"./TodoCard\"\r\n\r\n\r\n\r\nconst TodoList=()=>{\r\n    const dispatch=useDispatch()\r\n\r\n    const task = useSelector(state => state)\r\n     const handleAll=()=>{\r\n      dispatch(filterTask(\"ALL\"))  \r\n     }\r\n     const handleDone=()=>{\r\n        dispatch(filterTask(\"DONE\"))  \r\n       }\r\n       const handleNotDone=()=>{\r\n        dispatch(filterTask(\"NOTDONE\"))  \r\n       }\r\n   return (\r\n       \r\n       <div>\r\n         <div><br/>\r\n     <> <button  class=\"btn btn-primary\" onClick={handleAll}>All</button>\r\n        <button   class=\"btn btn-primary\" onClick={handleDone}>Done</button>\r\n        <button   class=\"btn btn-primary\" onClick={handleNotDone}>Not Done</button>\r\n         </>\r\n         \r\n        </div>\r\n        \r\n    \r\n    { task.y===\"ALL\"?\r\n    task.tasks.map((el,i)=><TodoCard key={i} el={el}/>):\r\n    task.y===\"DONE\" ? task.tasks.filter(el=>el.isDone).map((el,i)=><TodoCard key={i} el={el}/>):/*task.y===\"NOTDONE\"*/ task.tasks.filter(el=>!el.isDone).map((el,i)=><TodoCard key={i} el={el}/>)}\r\n    \r\n       </div>\r\n   )\r\n\r\n}\r\n\r\nexport default TodoList"]},"metadata":{},"sourceType":"module"}